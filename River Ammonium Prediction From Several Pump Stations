rm(list=ls())
# Load Dataset ------------------------------------------------------------
pacman::p_load(rio)
dataset1<-(import("C:\\train.csv"))
dataset1<-dataset1[,1:4]
dataset1<-na.omit(dataset1[,2:4])
a<-vector()
for (i in 1:dim(dataset1)[1]){
  a[i]=(sum(dataset1[i,2:dim(dataset1)[2]]>0, na.rm=T))
}
# Normalize Features ------------------------------------------------------
ab<-function(x){
  (x-min(x))/(max(x)-min(x))
}
normalizefeatures<-function(y){
  dataset<-apply(y,MARGIN=2,FUN=ab)
  dataset<<-dataset
}
normalizefeatures(dataset1)
dataset
lr=0.001
x<-matrix(c(rep(1,100),dataset[1:100,2:3]), ncol=3)
y<-dataset[1:100,1]
x2<-matrix(c(rep(1,43),dataset[101:143,2:3]), ncol=3)
y2<-dataset[101:143,1]
theta<-t(rep(1,3))
h<-theta%*%t(x)
costfna<-vector()
# Perform PCA -------------------------------------------------------------
for (i in 1:10000){
  h<-theta%*%t(x)
  costfn<-function(u){
    (1/200)*sum((h-y)*u)
  }
  dcf<-apply(x, MARGIN=2, FUN=costfn)
  dcf
  theta<-theta-lr*dcf
  costfna[i]=(1/2*100)*sum((h-y)^2)
}
plot(costfna, type='l')
plot(h,y)
# Testing -----------------------------------------------------------------
h2<-theta%*%t(x2)
plot(h2,y2)
MSE1<-mean((h-y)^2)
MSE2<-mean((h2-y2)^2)
MSEs<-list(MSE1,MSE2)
paste(MSEs)
# Prediction --------------------------------------------------------------
#Prediction Matrix
predmat<-cbind(t(h),y)
dataset2<-(import("C:\\test.csv"))
dataset2<-dataset2[,1:3]
dataset2<-as.matrix(na.omit(dataset2[,2:3]))
pmat<-cbind(rep(1,63),dataset2)
h3<-theta%*%t(pmat)
